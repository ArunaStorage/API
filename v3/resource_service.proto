syntax = "proto3";

package aruna.api.v3;

import "models.proto";

service ResourceService {
  rpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse) {}
  rpc CreateResource(CreateResourceRequest) returns (CreateResourceResponse) {}
  rpc CreateResourceBatch(CreateResourceBatchRequest) returns (CreateResourceBatchResponse) {}
  rpc GetResources(GetResourcesRequest) returns (GetResourcesResponse) {}
  rpc GetRelations(GetRelationsRequest) returns (GetRelationsResponse) {}
  rpc RegisterData(RegisterDataRequest) returns (RegisterDataResponse) {}
}

message CreateResourceRequest {
  string name = 1;
  string title = 2;
  string description = 3;
  aruna.api.v3.ResourceVariant variant = 4;
  repeated aruna.api.v3.KeyValue labels = 5;
  repeated string identifiers = 6;
  aruna.api.v3.VisibilityClass visibility = 7;
  repeated aruna.api.v3.Author authors = 8;
  string license_tag = 9;
  string parent_id = 10;
}

message CreateResourceResponse { aruna.api.v3.Resource resource = 1; }

message GetResourcesRequest { repeated string ids = 1; }

message GetResourcesResponse {
  repeated aruna.api.v3.Resource resources = 1;
}

message CreateProjectRequest {
  string name = 1;
  string title = 2;
  string description = 3;
  aruna.api.v3.ResourceVariant variant = 4;
  repeated aruna.api.v3.KeyValue labels = 5;
  repeated string identifiers = 6;
  aruna.api.v3.VisibilityClass visibility = 7;
  repeated aruna.api.v3.Author authors = 8;
  string license_tag = 9;
  string group_id = 10;
  string realm_id = 11;
}
message CreateProjectResponse {
  aruna.api.v3.Resource resource = 1;
}

message BatchResource{
  string name = 1;
  string title = 2;
  string description = 3;
  aruna.api.v3.ResourceVariant variant = 4;
  repeated aruna.api.v3.KeyValue labels = 5;
  repeated string identifiers = 6;
  aruna.api.v3.VisibilityClass visibility = 7;
  repeated aruna.api.v3.Author authors = 8;
  string license_tag = 9;
  oneof parent {
    string parent_id = 10;
    uint32 parent_index = 11;
  };
}

message CreateResourceBatchRequest {
  repeated BatchResource resources = 1;
}

message CreateResourceBatchResponse {
  repeated aruna.api.v3.Resource resources = 1;
}

message GetRelationsRequest {
  string resource_id = 1;
  bool incoming = 2; // else outgoing
  repeated uint32 filter = 3;
  uint64 offset = 4;
  uint64 page_size = 5;
}

message GetRelationsResponse {
  repeated aruna.api.v3.Relation relations = 1;
  optional uint64 offset = 2;
}

message RegisterDataRequest {
  string resource_id = 1;
  string proxy_id = 2;
  repeated aruna.api.v3.Hash hashes = 3;
}

message RegisterDataResponse {
  aruna.api.v3.Resource resource = 1;
}