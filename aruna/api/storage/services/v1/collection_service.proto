syntax = "proto3";

package aruna.api.storage.services.v1;
option go_package = "github.com/ArunaStorage/go-api/aruna/api/storage/services/v1";
option java_multiple_files = true;
option java_package = "com.github.ArunaStorage.java_api.aruna.api.storage.services.v1";
option java_outer_classname = "CollectionService";

import "aruna/api/storage/models/v1/models.proto";
import "aruna/api/storage/models/v1/auth.proto";
import "google/api/annotations.proto";


service CollectionService {
    rpc CreateNewCollection(CreateNewCollectionRequest) returns (CreateNewCollectionResponse){
        option (google.api.http) = {
            post: "/v1/collection"
            body: "*"
        };
    }
    rpc GetCollection(GetCollectionRequest) returns (GetCollectionResponse){
        option (google.api.http) = {
            get: "/v1/collection/{id}"
        };
    }

    rpc UpdateCollection(UpdateCollectionRequest) returns (UpdateCollectionResponse){
        option (google.api.http) = {
            put: "/v1/collection/{id}"
            body: "*"
        };
    }

    rpc AddExistingObjectsToCollection(AddExistingObjectToCollectionRequest) returns (AddExistingObjectToCollectionResponse){
        option (google.api.http) = {
            post: "/v1/collection/{collection_id}/objects"
            body: "*"
        };
    }

    rpc GetObjectsInCollection(GetObjectsInCollectionRequest) returns (GetObjectsInCollectionResponse){
        option (google.api.http) = {
            get: "/v1/collection/{collection_id}/objects"
        };
    }

}

// Models:

message CreateNewCollectionRequest {
    string name = 1;
    string description = 2;
    repeated storage.models.v1.KeyValue labels = 3;
    repeated storage.models.v1.KeyValue hooks = 4;
    repeated storage.models.v1.Authorization authorization = 5;
}

message CreateNewCollectionResponse {
    string id = 1;
}

message GetCollectionRequest {
    string id = 1;
}

message GetCollectionResponse {
    storage.models.v1.Collection collection = 1;
}

message UpdateCollectionRequest {
    string id = 1;
    string name = 2;
    string description = 3;
    repeated storage.models.v1.KeyValue labels = 4;
    repeated storage.models.v1.KeyValue hooks = 5;
    repeated storage.models.v1.Authorization authorization = 6;
}

message UpdateCollectionResponse {
    storage.models.v1.Collection collection = 1;
}

message AddExistingObjectToCollectionRequest {
    string collection_id = 1;
    repeated string object_id = 2;
}

message AddExistingObjectToCollectionResponse {
    storage.models.v1.Collection collection = 1;
}

message GetObjectsInCollectionRequest {
    string collection_id = 1;
}

message GetObjectsInCollectionResponse {
    repeated storage.models.v1.Object object = 1;
}