syntax = "proto3";

package aruna.api.storage.models.v1;
option go_package = "github.com/ArunaStorage/go-api/aruna/api/storage/models/v1";

import "google/protobuf/timestamp.proto";

// A Project is a list of collections with associated users
// This is used to manage access to multiple collections at the same time
// Each Collection can only be in one Project at a time
message Project {
  string id = 1;
  string name = 2;
  repeated ProjectPermission user_permissions = 3;
  repeated string collection_ids = 4;
  string description = 5;
  // Project binary flag(s)
  int64 flags = 6;
}

message ProjectOverview {
  string id = 1;
  string name = 2;
  string description = 3;
  repeated string collection_ids = 4;
  repeated string user_ids = 5;
  // Project binary flag(s)
  int64 flags = 6;
}

message User {
  // Internal Aruna UserID
  string id = 1;
  // Oidc subject ID
  string external_id = 2;
  // (optional) User display_name
  string display_name = 3;
  // Is the user activated
  bool active = 4;
  // Is the user admin ?
  bool is_admin = 5;
  // Is service account
  bool is_service_account = 6;
  // User email (empty if service account)
  string email = 7;
}

enum Permission {
  PERMISSION_UNSPECIFIED = 0;
  PERMISSION_NONE = 1; // No permissions granted, used for users that are in the
                       // project but have no default permissions
  PERMISSION_READ = 2; // Read only
  PERMISSION_APPEND = 3; // Append objects to the collection cannot modify existing objects
  PERMISSION_WRITE = 4; // Can Read/Append/Modify objects in the collection
                         // that owns the object / Create new collections
  PERMISSION_ADMIN = 5;  // Can modify the collections itself and permanently
                         // delete owned objects / move ownership of objects
}

enum PermType {
  PERM_TYPE_UNSPECIFIED = 0;
  PERM_TYPE_USER = 1;      // Regular OAuth users
  PERM_TYPE_ANONYMOUS = 2; // Anonymous users without an OAuth token
  PERM_TYPE_TOKEN = 3;     // Access token on behalf of a user
}

enum TokenType {
  TOKEN_TYPE_UNSPECIFIED = 0;
  TOKEN_TYPE_PERSONAL = 1;
  TOKEN_TYPE_SCOPED = 2;
}

message Token {
  string id = 1;
  string name = 2;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp expires_at = 6;
  oneof resource_id {
    string collection_id = 7;
    string project_id = 8;
    bool personal = 9;
  }
  Permission permission = 10;
  google.protobuf.Timestamp used_at = 11;
}

message ProjectPermission {
  string user_id = 1;
  string project_id = 2;
  Permission permission = 3;
  bool service_account = 4;
}

message ResourcePermission {
  string resource_id = 1;
  Permission permission = 2;
}


message CustomAttributes {
  string attribute_name = 1;
  string attribute_value = 2;
}

message GlobalAttributes {
  bool global_admin = 1;
  bool service_account = 2;
  repeated CustomAttributes custom_attributes = 3; // This is a placeholder for future additional attributes
}

message UserAttributes {
  GlobalAttributes attributes = 1;
  StoragePermissions storage_perms = 2;
}

// Storage resource specific userpermissions
// Evaluated in Order -> 1: object_deny > 4: collection_permissions etc.
message StoragePermissions {
  repeated string object_deny = 1;
  repeated ResourcePermission object_permissions = 2;
  repeated string collection_deny = 3;
  repeated ResourcePermission collection_permissions = 4;
  repeated ResourcePermission project_permissions = 5;
}

message ProjectPermissionDisplayName {
  string user_id = 1;
  string project_id = 2;
  Permission permission = 3;
  string display_name = 4;
}