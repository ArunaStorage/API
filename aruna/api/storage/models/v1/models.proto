syntax = "proto3";
import "google/protobuf/timestamp.proto";

package aruna.api.storage.models.v1;

// A key value pair for hooks and labels
message KeyValue {
  string key = 1;
  string value = 2;
}

message LabelOntology {
  // These are the keys for labels that are required for the collection
  // Adding an Object without these keys will result in an error
  // Defaults to empty string if not specified
  repeated string required_label_keys = 1;
}

// An arbitrary status for Objects
enum Status {
  STATUS_UNSPECIFIED = 0;
  STATUS_INITIALIZING = 1;
  STATUS_AVAILABLE = 2;
  STATUS_UNAVAILABLE = 3;
  STATUS_ERROR = 4;
  STATUS_TRASH = 5;
}

// Stats for a set of objects
message Stats {
  int64 count = 1;
  int64 acc_size = 2;
}

// Stats for a collection
message CollectionStats {
  Stats object_stats = 1;
  int64 object_group_count = 2;
  google.protobuf.Timestamp last_updated = 3;
}

// Stats for an object group
message ObjectGroupStats {
  Stats object_stats = 1;
  google.protobuf.Timestamp last_updated = 2;
}

// Semver version -> Alpha Beta release are not supported -> Use "latest" for
// mutable collections that are in development
message Version {
  int32 major = 1;
  int32 minor = 2;
  int32 patch = 3;
}

enum Hashalgorithm {
  HASHALGORITHM_UNSPECIFIED = 0;
  HASHALGORITHM_MD5 = 1;
  HASHALGORITHM_SHA1 = 2;
  HASHALGORITHM_SHA256 = 3;
  HASHALGORITHM_SHA512 = 4;
  HASHALGORITHM_MURMUR3A32 = 5;
  HASHALGORITHM_XXHASH32 = 6;
}

message Hash {
  Hashalgorithm alg = 1;
  string hash = 2;
}

// Specifies the Origin of the object
enum OriginType {
  ORIGIN_TYPE_UNSPECIFIED = 0;
  ORIGIN_TYPE_USER = 1;     // User uploaded the object
  ORIGIN_TYPE_OBJCLONE = 2; // Object was cloned from another object
}

// Origin of the object -> To be GDPA compliant
message Origin {
  OriginType type = 1;
  string id = 2;
}

// Dataclass defines the confidentiality of the object
enum DataClass {
  DATA_CLASS_UNSPECIFIED = 0;
  DATA_CLASS_PUBLIC = 1;
  DATA_CLASS_PRIVATE = 2;
  DATA_CLASS_CONFIDENTIAL = 3;
  DATA_CLASS_PROTECTED = 4;
}

message Source {
  // This is a URL / DOI
  string identifier = 1;
  // Either URL oder DOI
  SourceType source_type = 2;
}

enum SourceType {
  SOURCE_TYPE_UNSPECIFIED = 0;
  SOURCE_TYPE_URL = 1;
  SOURCE_TYPE_DOI = 2;
}

enum EndpointType {
  ENDPOINT_TYPE_UNSPECIFIED = 0;
  ENDPOINT_TYPE_S3 = 1;
  ENDPOINT_TYPE_FILE = 2;
}

message Endpoint {
  string id = 1;
  EndpointType ep_type = 2;
  string name = 3;
  string proxy_hostname = 4;
  string internal_hostname = 5;
  string documentation_path = 6;
  bool is_public = 7;
  bool is_default = 8;
}

// RULES for Objects:
// 1.  Each object is "owned" by one/or more collections
// 2.  Objects can be "borrowed" to multiple other collections
// 3.  Objects are immutable, updating an object will create a new object with
// increased revision number
//     only people with modify permissions in the owner collection can update an
//     object
// 3.1 Special cases:
//     Hooks: Can be added/removed and modified without changing the object
//     revision number Labels: Can be added without changing the object revision
//     number, removing or modifying labels WILL change the object revision
//     number (append only) auto_update: Can be added/removed without changing
//     the object revision number and is collection specific
// 4.  Objects can only be permanently deleted by a person with admin rights on
// the owner collection

message Object {
  string id = 1;       // ObjectID
  string filename = 2; // Filename: Name of the original file e.g.: mydata.json
  repeated KeyValue labels = 4; // Labels to additionally describe the object
  repeated KeyValue hooks = 5;  // Hooks to be executed on the object
  google.protobuf.Timestamp created = 6;
  int64 content_len = 7; // Lenght of the stored dataset
  Status status = 8;
  Origin origin = 9;         // Origin of the object
  DataClass data_class = 10; // Confidentiality of the object
  Hash hash = 11;            // MD5 hash of the data
  int64 rev_number = 12;     // Increasing revion number for each update
  Source source = 13;        // External source where this data originates from

  bool latest = 14; // Is this the latest version of the object?
  // This is a collection specific attribute
  // Must be false if collection is immutable
  bool auto_update = 15; // If true, the object will be updated automatically
}

// Multiple Objects
message Objects { repeated Object objects = 1; }

// ObjectGroups are optional and can be used to group objects in a collection
// together They need to refer to objects in the same collection Objectgroups
// can be changed if the collection is mutable
message ObjectGroup {
  string id = 1;
  string name = 2;
  string description = 3;
  repeated KeyValue labels = 6;
  repeated KeyValue hooks = 7;
  repeated Object objects = 8;      // Must be in collection objects
  repeated Object meta_objects = 9; // Must be in collection objects
  ObjectGroupStats stats = 10;
  int64 rev_number = 11;
}

// Multiple ObjectGroups
message ObjectGroups { repeated ObjectGroup object_groups = 1; }

// This is a representation of the ObjectGroup without the recursive nature of
// object references
message ObjectGroupOverview {
  string id = 1;
  string name = 2;
  string description = 3;
  repeated KeyValue labels = 6;
  repeated KeyValue hooks = 7;
  ObjectGroupStats stats = 8;
  int64 rev_number = 9;
}

// Multiple ObjectGroupOverviews
message ObjectGroupOverviews {
  repeated ObjectGroupOverview object_group_overviews = 1;
}

// This is a representation of the ObjectGroup with only ObjectIDs instead of
// full objects
message ObjectGroupWithID {
  string id = 1;
  string name = 2;
  string description = 3;
  repeated KeyValue labels = 6;
  repeated KeyValue hooks = 7;
  repeated string object_ids = 8;      // Must be in collection objects
  repeated string meta_object_ids = 9; // Must be in collection objects
  ObjectGroupStats stats = 10;
  int64 rev_number = 11;
}

// Multiple ObjectGroupWithIDs
message ObjectGroupWithIDs {
  repeated ObjectGroupWithID object_group_with_ids = 1;
}

// RULES for Collections:
// 1. Each object is "owned" by one/or more collections
// 2. Objects can be in multiple collections and must be in the owner collection
// 3. Collections are either mutable with Version.latest == true or immutable
// with a fixed version number 3.1 If a collection gets a fixed version a copy
// is created with all "latest" objects dereferenced to their respective
// revisions 3.2 Modifying an immutable collection will create a new copy of the
// collection with a new version number
// 4. Collections can be created by any user, but only the owner can modify or
// delete them

message Collection {
  string id = 1;
  string name = 2; // Should be unique in authgroup
  string description = 3;
  repeated KeyValue labels = 4;
  repeated KeyValue hooks = 5;
  LabelOntology label_ontology = 6; // Ontology for labels
  google.protobuf.Timestamp created = 7;
  repeated Object objects = 8;
  repeated Object specifications = 9;
  repeated ObjectGroup object_groups = 10;
  oneof version {
    Version semantic_version = 12;
    bool latest = 13;
  }
  CollectionStats stats = 14;
  bool is_public = 15;
}

// Multiple Collections
message Collections { repeated Collection collections = 1; }

// This is a representation of the Collection without the recursive nature of
// objectreferences
message CollectionOverview {
  string id = 1;
  string name = 2;
  string description = 3;
  repeated KeyValue labels = 4;
  repeated KeyValue hooks = 5;
  LabelOntology label_ontology = 6; // Ontology for labels
  google.protobuf.Timestamp created = 7;
  oneof version {
    Version semantic_version = 12;
    bool latest = 13;
  }
  CollectionStats stats = 14;
  bool is_public = 15;
}

// Multiple CollectionOverviews
message CollectionOverviews {
  repeated CollectionOverview collection_overviews = 1;
}

// This is a representation of the Collection with only Resource RevisionIDs
// instead of full objects
message CollectionWithID {
  string id = 1;
  string name = 2;
  string description = 3;
  repeated KeyValue labels = 4;
  repeated KeyValue hooks = 5;
  LabelOntology label_ontology = 6; // Ontology for labels
  google.protobuf.Timestamp created = 7;
  repeated string objects = 8;
  repeated string specifications = 9;
  repeated string object_groups = 10;
  oneof version {
    Version semantic_version = 12;
    bool latest = 13;
  }
  CollectionStats stats = 14;
  bool is_public = 15;
}

// Multiple CollectionWithIDs
message CollectionWithIDs { repeated CollectionWithID collection_with_ids = 1; }