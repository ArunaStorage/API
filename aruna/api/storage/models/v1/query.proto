syntax = "proto3";

package aruna.api.storage.models.v1;

import "aruna/api/storage/models/v1/models.proto";

// This file contains parameters for queries that return a list of resources.
// The results are paginated.
// The page request specifies the page size and last_id.
// If page_size is not specified, it defaults to 20.
// If page_size is -1, it returns all objects.
message PageRequest {
  string last_uuid = 1; // This is the last ID of the previous returned request
  uint64 page_size = 2; // Default to 20, -1 for all
}

// This defines the behaviour of the Query how to combine multiple Labels
// The default Query Type is: AND so each Label must be present in the result
enum LabelQueryType {
  LABEL_QUERY_TYPE_UNSPECIFIED = 0;
  LABEL_QUERY_TYPE_AND = 1; // A AND B
  LABEL_QUERY_TYPE_OR = 2;  // A OR B including A AND B, This is similar to Any
  LABEL_QUERY_TYPE_XOR = 3; // Either A OR B but not both
  LABEL_QUERY_TYPE_KEY =
      4; // Return all objects with a specific Key independent of value
}

// LabelFilter is used to filter resources by labels.
// The labels are specified as a map of key-value pairs.
message LabelFilter {
  repeated KeyValue labels = 1;
  LabelQueryType type = 2;
}

message ResourceIDList { repeated string ids = 1; }

// This is a combined query for either a list of resource IDs or filtered by
// Label Can be expanded in the future to allow for more complex queries
message LabelOrIDQuery {
  oneof query {
    LabelFilter labels = 1;
    ResourceIDList ids = 2;
  }
}
