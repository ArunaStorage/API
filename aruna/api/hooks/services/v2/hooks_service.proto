syntax = "proto3";

package aruna.api.hooks.services.v2;
option go_package = "github.com/ArunaStorage/go-api/aruna/api/storage/services/v2";
option java_multiple_files = true;
option java_package = "com.github.ArunaStorage.java_api.aruna.api.storage.services.v2";
option java_outer_classname = "HooksService";
import "google/api/annotations.proto";

import "aruna/api/storage/models/v2/models.proto";

// HooksService
//
// Status: ALPHA
//
// A service that enables automatic Hook scheduling
service HooksService {
    rpc CreateHook(CreateHookRequest) returns (CreateHookResponse) {
        option (google.api.http) = {
            post : "/v2/hook"
            body : "*"
          };
    }
    rpc ListHooks(ListHooksRequest) returns (ListHooksResponse) {
        option (google.api.http) = {
            get : "/v2/hooks/project/{project_id}"
        };
    }
    rpc DeleteHook(DeleteHookRequest) returns (DeleteHookResponse) {
        option (google.api.http) = {
            delete : "/v2/hook/{hook_id}"
        };
    }
    rpc HookCallback(HookCallbackRequest) returns (HookCallbackResponse) {
        option (google.api.http) = {
            delete : "/v2/hook/callback"
        };
    }
}

enum TriggerType {
    TRIGGER_TYPE_UNSPECIFIED = 0;
    TRIGGER_TYPE_HOOK_ADDED = 1;
    TRIGGER_TYPE_OBJECT_CREATED = 2;
}

message Trigger {
    TriggerType trigger_type = 1;
    string key = 2;
    string value = 3;
}

message ExternalHook {
    string url = 1;
    Credentials credentials = 2;
    string json_template = 3;
    Method method = 4;
}

enum Method {
    METHOD_UNSPECIFIED = 0;
    METHOD_PUT = 1;
    METHOD_POST = 2;
}

message AddLabel {
    string key = 1;
    string value = 2;
}

message AddHook {
    string key = 1;
    string value = 2;
}

message InternalHook {
    oneof internal_action {
	AddLabel add_label = 1;
	AddHook add_hook = 2;
	storage.models.v2.Relation add_relation = 3;
    }
}

message Hook {
    oneof hook_type {
        ExternalHook external_hook = 1;
        InternalHook internal_hook = 2;
    }
}

// Will be expanded with additional credential types
message Credentials {
    string token = 1;
}

message CreateHookRequest {
    Trigger trigger = 1;
    Hook hook = 2;
    uint64 timeout = 3;
    string project_id = 4;
}
message CreateHookResponse {
    string hook_id = 1;
}

message DeleteHookRequest {
    string hook_id = 1;
}

message DeleteHookResponse {}

message HookCallbackRequest {
    bool success = 1;
    repeated storage.models.v2.KeyValue add_key_values = 2;
    repeated storage.models.v2.KeyValue remove_key_values = 3;
    string secret = 4;
    string hook_id = 5;
    string object_id = 6;
    string pubkey_serial = 7;
}

message HookCallbackResponse{}

message ListHooksRequest{
    string project_id = 1;
}

message HookInfo {
    string hook_id = 1;
    Hook hook = 2;
    Trigger trigger = 3;
    uint64 timeout = 4;
}

message ListHooksResponse{
    repeated HookInfo infos = 1;
}
