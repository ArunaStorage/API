syntax = "proto3";

package aruna.api.hooks.services.v1;
option go_package = "github.com/ArunaStorage/go-api/aruna/api/storage/services/v1";
option java_multiple_files = true;
option java_package = "com.github.ArunaStorage.java_api.aruna.api.storage.services.v1";
option java_outer_classname = "HooksService";

import "aruna/api/storage/models/v1/models.proto";

// HooksService
//
// Status: ALPHA
//
// A service that enables automatic Hook scheduling
service HooksService {
    rpc CreateHook(CreateHookRequest) returns (CreateHookResponse) {}
    rpc ListHook(ListHookRequest) returns (ListHookResponse) {}
    rpc DeleteHook(DeleteHookRequest) returns (DeleteHookResponse) {}
    rpc HookCallback(HookCallbackRequest) returns (HookCallbackResponse) {}
}

enum TriggerType {
    TRIGGER_TYPE_UNSPECIFIED = 0;
    TRIGGER_TYPE_HOOK_ADDED = 1;
}

message Trigger {
    TriggerType trigger_type = 1;
    string key = 2;
    string value = 3;
}

message ExternalHook {
    string url = 1;
    Credentials credentials = 2;
    string json_template = 3;
}

enum InternalAction {
    INTERNAL_ACTION_UNSPECIFIED = 0;
    INTERNAL_ACTION_ADD_LABEL = 1;
    INTERNAL_ACTION_ADD_HOOK = 2;
    INTERNAL_ACTION_CREATE_READ_REFERENCE = 3;
    INTERNAL_ACTION_CREATE_WRITE_REFERENCE = 4;
}

message InternalHook {
    InternalAction internal_action = 1;
    // Either key or target ID
    string target_id = 2;
    // Optional value
    string value = 3;
}

message Hook {
    oneof hook_type {
        ExternalHook external_hook = 1;
        InternalHook internal_hook = 2;
    }
}

// Will be updated with additional credential types
message Credentials {
    string token = 1;
}

message CreateHookRequest {
    Trigger trigger = 1;
    Hook hook = 2;
    string collection_id = 3;
}
message CreateHookResponse {
    string hook_id = 1;
}

message DeleteHookRequest {
    string hook_id = 1;
}

message DeleteHookResponse {}

message HookCallbackRequest {
    bool success = 1;
    repeated aruna.api.storage.models.v1.KeyValue labels = 2;
    repeated aruna.api.storage.models.v1.KeyValue hooks = 3;
}

message HookCallbackResponse{}

message ListHookRequest{
    string collection_id = 1;
}


message HookInfo {
    string hook_id = 1;
    Hook hook_info = 2;
}

message ListHookResponse{
    repeated HookInfo infos = 1;
}