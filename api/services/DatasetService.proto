syntax = "proto3";

package services;
option go_package = "github.com/ScienceObjectsDB/go-api/services";
option java_multiple_files = true;
option java_package = "com.github.ScienceObjectsDB.java-api.services";
option java_outer_classname = "DatasetService";


import "api/services/DatasetServiceModels.proto";
import "api/services/DatasetObjectServiceModels.proto";
import "api/models/Dataset.proto";
import "api/models/CommonModels.proto";
import "google/api/annotations.proto";

// Dataset management service
// Manages all dataset related services
// All data objects are associated with one data dataset
// Dataset versions group these data objects, which makes them reusable
service DatasetService {
    // CreateNewDataset Creates a new dataset and associates it with a dataset
    rpc CreateNewDataset(CreateDatasetRequest) returns (models.Dataset) {
        option (google.api.http) = {
            post: "/api/v1/dataset/create"
            body: "*"
        };
    }

    // Dataset Returns a specific dataset
    rpc Dataset(models.ID) returns (models.Dataset) {
        option (google.api.http) = {
            post: "/api/v1/dataset/get"
            body: "*"
        };
    }

    // Lists Versions of a dataset
    rpc DatasetVersions(models.ID) returns (DatasetVersionList) {
        option (google.api.http) = {
            post: "/api/v1/datasetversions/list"
            body: "*"
        };
    }

    rpc DatasetObjectGroups(models.ID) returns (ObjectGroupList) {
        option (google.api.http) = {
            post: "/api/v1/dataset/list"
            body: "*"
        };
    }

    rpc CurrentObjectGroupVersions(models.ID) returns (ObjectGroupVersions) {
        option (google.api.http) = {
            get: "/api/v1/dataset/{id}/currentgroupversions"
        };
    }

    // Updates a field of a dataset
    rpc UpdateDatasetField(models.UpdateFieldsRequest) returns (models.Dataset) {
        option (google.api.http) = {
            post: "/api/v1/dataset/update"
            body: "*"
        };
    }

    // DeleteDataset Delete a dataset
    rpc DeleteDataset(models.ID) returns (models.Empty) {
        option (google.api.http) = {
            post: "/api/v1/dataset/delete"
            body: "*"
        };
    }

    //---------------------------------------------------------------------------------------
    // Dataset version calls


    //ReleaseDatasetVersion Release a new dataset version
    rpc ReleaseDatasetVersion(ReleaseDatasetVersionRequest) returns (models.DatasetVersion) {
        option (google.api.http) = {
            post: "/api/v1/datasetversion/create"
            body: "*"
        };
    }

    rpc DatasetVersionObjectGroupVersions(models.ID) returns (ObjectGroupVersions) {
        option (google.api.http) = {
            post: "/api/v1/datasetversion/list"
            body: "*"
        };
    }
}