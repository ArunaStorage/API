syntax = "proto3";

package api.services.v1;
option go_package = "github.com/ScienceObjectsDB/go-api/api/services/v1";
option java_multiple_files = true;
option java_package = "com.github.ScienceObjectsDB.java_api.api.services.v1";
option java_outer_classname = "DatasetServiceModels";

import "google/protobuf/timestamp.proto";
import "api/models/v1/dataset.proto";
import "api/models/v1/common_models.proto";
import "api/models/v1/object_models.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// Dataset related Models
//CreateDatasetRequest Creates a new dataset
message CreateDatasetRequest {
    string name = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The dataset name."}]; // Name of the dataset
    string description = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The dataset description."}];
    string project_id = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The project ID the dataset is associated with."}]; //ProjectID of the project the dataset is associated with
    repeated models.v1.Label labels = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The field for labels."}];
    repeated models.v1.Metadata metadata = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The field for metadata."}];
}

message CreateDatasetResponse {
    string id = 1;
}

//GetDatasetRequest Request to get details of a specific dataset
message GetDatasetRequest {
    string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "ID of the dataset for that you want to get details."}];
}

message GetDatasetResponse {
    models.v1.Dataset dataset = 1;
}

//GetDatasetVersionsRequest Request to get the versions of a specific dataset
message GetDatasetVersionsRequest {
    string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "ID of the dataset for that you want to get the versions."}];
}

message GetDatasetVersionsResponse {
    repeated models.v1.DatasetVersion dataset_versions = 1;
}

//GetDatasetObjectGroupsRequest Request to get the object groups of a dataset
message GetDatasetObjectGroupsRequest {
    string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "ID of the dataset for that you want to get the object groups."}];
    models.v1.PageRequest page_request = 2;
}

message GetDatasetObjectGroupsResponse {
    repeated models.v1.ObjectGroup object_groups = 1;
}

message GetObjectGroupsInDateRangeRequest {
    string id = 1;
    google.protobuf.Timestamp start = 2;
    google.protobuf.Timestamp end = 3;
}

message GetObjectGroupsInDateRangeResponse {
    repeated models.v1.ObjectGroup object_groups = 1;
}

// GetObjectGroupsStreamLinkRequest a request for a get link to stream a set of object groups
// The query defines what object groups should be part of the stream
// The steam type defines how the individual objects are packed
// ZIP and TARGZ will bundle objectgroups into subfolders
message GetObjectGroupsStreamLinkRequest {
    StreamType stream_type = 3;

    oneof query {
        GroupIDsQuery group_ids = 4;
        DateRangeQuery date_range = 5;
        DatasetQuery dataset = 6;
        DatasetVersionQuery dataset_version = 7;
    }

    // Expiry time of the link
    // This is the maximum expiry time, implementations can set maximum durations that can be shorter than this
    google.protobuf.Timestamp expiry = 8;

    enum StreamType {
        STREAM_TYPE_BASE64NEWLINE = 0;
        STREAM_TYPE_ZIP = 1;
        STREAM_TYPE_TARGZ = 2;
    }

    message DateRangeQuery {
        string dataset_id = 3;
        google.protobuf.Timestamp start = 1;
        google.protobuf.Timestamp end = 2;
    }

    message GroupIDsQuery {
        string dataset_id = 2;
        repeated string object_groups = 1;
    }

    message DatasetQuery {
        string dataset_id = 1;
    }

    message DatasetVersionQuery {
        string dataset_id = 1;
        string dataset_version_id = 2;
    }
}

message GetObjectGroupsStreamLinkResponse {
    string url = 1;
}

message UpdateDatasetFieldRequest {
    models.v1.UpdateFieldsRequest update_request = 1;
}

message UpdateDatasetFieldResponse {
    
}


message DeleteDatasetRequest {
    string id = 1;
}

message DeleteDatasetResponse {

}

// DatasetVersion related models

//ReleaseDatasetVersionRequest Request to release a new dataset version
message ReleaseDatasetVersionRequest {
    string name = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The version name."}];
    string dataset_id = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The dataset ID the version is associated with."}];
    models.v1.Version version = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The field for the version number."}];
    repeated models.v1.Label labels = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The field for labels."}];
    repeated models.v1.Metadata metadata = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The field for metadata."}];
    repeated string object_group_ids = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The object group ids that belong to this version."}];
    string description = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The version description."}];
}


message ReleaseDatasetVersionResponse {
    string id = 1;
}

//GetDatasetVersionRequest Request to get details of a specific version
message GetDatasetVersionRequest {
    string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "ID of the version for that you want to get details."}];
}

message GetDatasetVersionResponse {
    models.v1.DatasetVersion dataset_version = 1;
}

//GetDatasetVersionObjectGroupsRequest Request to get all object groups that belong to a specific version
message GetDatasetVersionObjectGroupsRequest {
    string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "ID of the version for that you want to get the object groups."}];
    models.v1.PageRequest page_request = 2;
}

message GetDatasetVersionObjectGroupsResponse {
    repeated models.v1.ObjectGroup object_group = 1;
}

//DeleteDatasetVersionRequest Request to delete a specific version
message DeleteDatasetVersionRequest {
    string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "ID of the version for that you want to delete."}];
}

message DeleteDatasetVersionResponse {

}