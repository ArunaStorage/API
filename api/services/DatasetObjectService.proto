syntax = "proto3";

package services;
option go_package = "github.com/ScienceObjectsDB/go-api/services";
option java_multiple_files = true;
option java_package = "com.github.ScienceObjectsDB.java_api.services";
option java_outer_classname = "DatasetObjectsServices";

import "api/models/CommonModels.proto";
import "api/models/ObjectModels.proto";
import "api/services/DatasetObjectServiceModels.proto";

import "google/api/annotations.proto";

service DatasetObjectsService {
    //CreateObjectGroup Creates a new object group
    rpc CreateObjectGroupWithVersion(CreateObjectGroupWithVersionRequest) returns (GetObjectGroupVersionResponse) {
        option (google.api.http) = {
            post: "/api/v1/objectgroup/create"
            body: "*"
        };
    }

    //CreateObjectGroupVersion Creates a new object group version
    rpc AddVersionToObjectGroup(AddVersionToObjectGroupRequest) returns (GetObjectGroupVersionResponse) {
        option (google.api.http) = {
            post: "/api/v1/objectgroupversion/create"
            body: "*"
        };
    }

    //GetObjectGroup Returns the object group with the given ID
    rpc GetObjectGroup(models.ID) returns (GetObjectGroupVersionResponse) {
        option (google.api.http) = {
            post: "/api/v1/objectgroup/get"
            body: "*"
        };
    }

    //GetObjectGroupCurrentVersion Returns the head version in the history of a given object group
    rpc GetCurrentObjectGroup(models.ID) returns (GetObjectGroupVersionResponse) {
        option (google.api.http) = {
            post: "/api/v1/currentobjectgroup/get"
            body: "*"
        };
    }

    rpc GetObjectGroupVersion(GetObjectGroupVersionRequest) returns (models.ObjectGroupVersion) {
        option (google.api.http) = {
            post: "/api/v1/objectgroupversion/get"
            body: "*"
        };
    }

    rpc GetObjectGroupVersions(models.ID) returns (ObjectGroupVersions) {
        option (google.api.http) = {
            post: "/api/v1/objectgroupversions/get"
            body: "*"
        };
    }

    //FinishObjectUpload Finishes the upload process for an object
    rpc FinishObjectUpload(models.ID) returns (models.Empty) {
        option (google.api.http) = {
            post: "/api/v1/object/finish"
            body: "*"
        };
    }
}